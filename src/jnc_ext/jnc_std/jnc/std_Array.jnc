//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

namespace std {

//! \addtogroup std-container
//! @{

//..............................................................................

//! \import std_Array.jnc

class Array {
	variant cmut* readonly m_p;
	size_t readonly m_count;
	size_t readonly m_maxCount;

	variant get(size_t index) const {
		boundsCheck(index);
		return m_p[index];
	}

	void set(
		size_t index,
		variant e
	) {
		boundsCheck(index);
		m_p[index] = e;
	}

	void clear();

	void detach() {
		m_p = null;
		m_count = 0;
		m_maxCount = 0;
	}

	bool errorcode setCount(size_t count);
	bool errorcode reserve(size_t count);

	size_t errorcode copy(
		variant const* p,
		size_t count
	);

	size_t errorcode copy(variant e) {
		return copy(&e, 1);
	}

	size_t errorcode append(variant e) {
		return insert(-1, &e, 1);
	}

	size_t errorcode append(
		variant const* p,
		size_t count
	) {
		return insert(-1, p, count);
	}

	size_t errorcode insert(
		size_t index,
		variant const* p,
		size_t count
	);

	size_t errorcode insert(
		size_t index,
		variant e
	) {
		return insert(index, &e, 1);
	}

	size_t remove(
		size_t index,
		size_t count = 1
	);

protected:
	void boundsCheck(size_t index) const {
		if (index >= m_count) {
			std.setError($"attempt to access out-of-bounds index $index (count: $m_count)");
			throw;
		}
	}
}

//..............................................................................

//! @}

} // namespace std
