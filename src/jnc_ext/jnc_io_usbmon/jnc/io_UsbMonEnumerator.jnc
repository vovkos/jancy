//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

namespace io {

//! \addtogroup io-usbmon
//! @{

//..............................................................................

enum UsbMonDeviceSpeed {
	Unknown,
	Low,
	Full,
	High,
	Super,
};

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

bitflag enum UsbMonDeviceDescFlags {
	Hub,
	DeviceDescriptor,
};

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct UsbMonDeviceDesc {
	UsbMonDeviceDesc const* m_next;
	char const* m_captureDeviceName;
	char const* m_description;
	char const* m_manufacturer;
	char const* m_driver;
	char const* m_manufacturerDescriptor;
	char const* m_productDescriptor;
	char const* m_serialNumberDescriptor;

	UsbMonDeviceSpeed m_speed;

	uint_t m_vendorId;
	uint_t m_productId;
	uint_t m_address;
	uint_t m_class;
	uint_t m_subClass;
	uint_t m_manufacturerDescriptorId;
	uint_t m_productDescriptorId;
	uint_t m_serialNumberDescriptorId;
	uint_t m_flags;
}

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

bitflag enum UsbMonDeviceDescMask {
	Hubs,
	Description,
	Manufacturer,
	Driver,
	ManufacturerDescriptor,
	ProductDescriptor,
	SerialNumberDescriptor,

	Descriptors =
		ManufacturerDescriptor |
		ProductDescriptor |
		SerialNumberDescriptor,
	AllButHubs =
		Description |
		Manufacturer |
		Driver |
		Descriptors,
	All =
		AllButHubs |
		Hubs,
};

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

UsbMonDeviceDesc const* enumerateUsbMonDevices(
	UsbMonDeviceDescMask mask,
	size_t* count = null
);

UsbMonDeviceDesc const* enumerateUsbMonDevices(size_t* count = null) {
	return enumerateUsbMonDevices(0, count);
}

//..............................................................................

//! @}

} // namespace io
