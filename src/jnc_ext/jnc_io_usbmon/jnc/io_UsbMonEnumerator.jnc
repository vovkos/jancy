//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

import "io_usb.jncx"
import "io_UsbDeviceStrings.jnc"

namespace io {

//! \addtogroup io-usbmon
//! @{

//..............................................................................

struct UsbMonDeviceDescBase: UsbDeviceStrings {
	string_t m_captureDeviceName;
	uint_t m_captureDeviceId;

	uint16_t m_vendorId;
	uint16_t m_productId;

	uint8_t m_address;
	uint8_t m_port;
	uint8_t m_class;
	uint8_t m_subClass;
	UsbSpeed m_speed;
}

struct UsbMonDeviceDesc: UsbMonDeviceDescBase {
	UsbMonDeviceDesc const* m_next;
}

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

bitflag enum UsbMonEnumFlags: UsbDeviceStringId {
	Hubs = 0x0100,
};

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

bool detectUsbMon();

UsbMonDeviceDesc const* enumerateUsbMonDevices(
	UsbMonEnumFlags flags,
	size_t* count = null
);

UsbMonDeviceDesc const* enumerateUsbMonDevices(size_t* count = null) {
	return enumerateUsbMonDevices(0, count);
}

//..............................................................................

//! @}

} // namespace io
