//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

import "io_usb.jncx"
import "io_UsbTransfer.jnc"

namespace io {

//! \addtogroup io-usbmon
//! @{

//..............................................................................

bitflag enum UsbMonTransferFlags: uint16_t {
	Completed
};

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct UsbMonTransferHdr {
	uint64_t m_id;
	uint64_t m_timestamp;
	uint32_t m_status;       // USBD_STATUS on Windows, errno on Linux
	uint16_t m_urbFunction;  // URB_FUNCTION on Windows
	UsbMonTransferFlags m_flags;
	UsbTransferType m_transferType;
	uint8_t m_bus;
	uint8_t m_address;
	uint8_t m_endpoint;
	uint32_t m_originalDataSize; // original transfer data size
	uint32_t m_capturedDataSize; // captured by the driver (could be truncated)
	uint32_t _m_padding;

	union {
		UsbControlSetup m_controlSetup;
		UsbIsoHdr m_isoHdr;
	};
};

// followed by UsbIsoPacket[m_isoHdr.m_packetCount] for isochornous transfers
// followed by payload data[m_capturedDataSize]

//..............................................................................

//! @}

} // namespace io
