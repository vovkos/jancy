.. include:: def.rst
.. index:: pair: enum; SerialFlowControl
.. _doxid-type_io_serialflowcontrol:

enum io.SerialFlowControl
=========================

Overview
~~~~~~~~

This enumeration specifies all possible values for the serial flow
control setting. :ref:`More...<details-type_io_serialflowcontrol>`

.. ref-code-block:: jancy
	:class: doxyrest-overview-code-block

	
	enum SerialFlowControl {
	    :ref:`None<doxid-enum_member_io_serialflowcontrol_none>`,
	    :ref:`RtsCts<doxid-enum_member_io_serialflowcontrol_rtscts>`,
	    :ref:`XonXoff<doxid-enum_member_io_serialflowcontrol_xonxoff>`,
	};

.. _details-type_io_serialflowcontrol:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This enumeration specifies all possible values for the serial flow
control setting.

Flow control is the protocol of attempted prevention of data loss during
serial transmission which may happen when transmission side sends data
faster than the receiving side is able to process it.

To adjust the flow control protocol, modify `io.Serial.m_flowControl`
property at any time(both pre-open and post-open modifications are
supported).



.. rubric:: See also:

`io.Serial`

Enum Values
-----------

.. index:: pair: enumvalue; None
.. _doxid-enum_member_io_serialflowcontrol_none:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	None

No flow control protocol is employed. If the receiving end is not
capable of handling arriving data fast enough, the data is
unconditionally lost.

.. index:: pair: enumvalue; RtsCts
.. _doxid-enum_member_io_serialflowcontrol_rtscts:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	RtsCts

``RTS/CTS`` flow control (sometimes called **hardware** flow control).
Remote side is only allowed to send the data if the ``RTS`` control line
is ``high``; likewise, the local side should only send data when ``CTS``
status line is ``high``.

.. index:: pair: enumvalue; XonXoff
.. _doxid-enum_member_io_serialflowcontrol_xonxoff:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	XonXoff

``XON/XOFF`` flow control (sometimes called **software** flow control).
In this protocol, two special charaters are selected as ``XON``
(``0x11``) and ``XOFF`` (``0x13``). Note that current implementation of
``io.Serial`` class does not allow overriding these values.

If a side of transmission detects ``XOFF`` character in input stream,
this side should suspend the transmission until it sees ``XON``
character; at which moment the transmission may be resumed.

