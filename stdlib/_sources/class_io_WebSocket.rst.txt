.. include:: def.rst
.. index:: pair: class; io.WebSocket
.. _doxid-type_io_websocket:

class io.WebSocket
==================

.. toctree::
	:hidden:




.. ref-code-block:: jancy
	:class: doxyrest-overview-code-block

	
	class WebSocket {
		// fields
	
		:ref:`io.SslState<doxid-type_io_sslstate>`* readonly :target:`m_sslState<doxid-field_io_websocket_m_sslstate>`;
		:ref:`io.WebSocketHandshake<doxid-type_io_websockethandshake>` const* readonly :target:`m_handshakeRequest<doxid-field_io_websocket_m_handshakerequest>`;
		:ref:`io.WebSocketHandshake<doxid-type_io_websockethandshake>` const* readonly :target:`m_handshakeResponse<doxid-field_io_websocket_m_handshakeresponse>`;
		:ref:`io.WebSocketEvents<doxid-type_io_websocketevents>` readonly volatile :target:`m_activeEvents<doxid-field_io_websocket_m_activeevents>`;
		:ref:`std.Error<doxid-type_std_error>` const* readonly volatile :target:`m_ioError<doxid-field_io_websocket_m_ioerror>`;
		bool readonly :target:`m_isOpen<doxid-field_io_websocket_m_isopen>`;

		// properties
	
		:ref:`io.SocketAddress<doxid-type_io_socketaddress>` const property :target:`m_address<doxid-property_io_websocket_m_address>`;
		:ref:`io.SocketAddress<doxid-type_io_socketaddress>` const property :target:`m_peerAddress<doxid-property_io_websocket_m_peeraddress>`;
		:ref:`io.WebSocketHandshakeHeaders<doxid-type_io_websockethandshakeheaders>` const* autoget property :target:`m_extraHeaders<doxid-property_io_websocket_m_extraheaders>`;
		:ref:`size_t<doxid-typedef_size_t>` autoget property :target:`m_incomingFrameSizeLimit<doxid-property_io_websocket_m_incomingframesizelimit>`;
		:ref:`size_t<doxid-typedef_size_t>` autoget property :target:`m_incomingMessageSizeLimit<doxid-property_io_websocket_m_incomingmessagesizelimit>`;
		:ref:`size_t<doxid-typedef_size_t>` autoget property :target:`m_outgoingFragmentationThreshold<doxid-property_io_websocket_m_outgoingfragmentationthreshold>`;
		:ref:`size_t<doxid-typedef_size_t>` autoget property :target:`m_readBlockSize<doxid-property_io_websocket_m_readblocksize>`;
		:ref:`size_t<doxid-typedef_size_t>` autoget property :target:`m_readBufferSize<doxid-property_io_websocket_m_readbuffersize>`;
		:ref:`size_t<doxid-typedef_size_t>` autoget property :target:`m_writeBufferSize<doxid-property_io_websocket_m_writebuffersize>`;
		:ref:`io.WebSocketOptions<doxid-type_io_websocketoptions>` autoget property :target:`m_options<doxid-property_io_websocket_m_options>`;

		// construction
	
		:target:`construct<doxid-function_io_websocket_construct>`();
		:target:`destruct<doxid-function_io_websocket_destruct>`();

		// methods
	
		bool errorcode :target:`open<doxid-function_io_websocket_open>`(
			:ref:`io.AddressFamily<doxid-type_io_addressfamily>` family,
			bool isSecure = false
		);
	
		bool errorcode :target:`open<doxid-function_io_websocket_open_2>`(
			:ref:`io.SocketAddress<doxid-type_io_socketaddress>` const* address,
			bool isSecure = false
		);
	
		void :target:`close<doxid-function_io_websocket_close>`();
	
		bool errorcode :target:`connect<doxid-function_io_websocket_connect>`(
			:ref:`io.SocketAddress<doxid-type_io_socketaddress>` const* address,
			:ref:`string_t<doxid-typedef_string_t>` resource,
			:ref:`string_t<doxid-typedef_string_t>` host
		);
	
		bool errorcode :target:`listen<doxid-function_io_websocket_listen>`(:ref:`size_t<doxid-typedef_size_t>` backlog = 0);
	
		io.WebSocket* errorcode :target:`accept<doxid-function_io_websocket_accept>`(
			:ref:`io.SocketAddress<doxid-type_io_socketaddress>`* address = null,
			bool isSuspended = false
		);
	
		void :target:`unsuspend<doxid-function_io_websocket_unsuspend>`();
	
		bool errorcode :target:`serverHandshake<doxid-function_io_websocket_serverhandshake>`(
			:ref:`uint_t<doxid-typedef_uint_t>` statusCode,
			:ref:`string_t<doxid-typedef_string_t>` reasonPhrase
		);
	
		bool errorcode :target:`serverHandshake<doxid-function_io_websocket_serverhandshake_2>`();
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`read<doxid-function_io_websocket_read>`(
			:ref:`io.WebSocketFrameOpcode<doxid-type_io_websocketframeopcode>`* opcode,
			void* p,
			:ref:`size_t<doxid-typedef_size_t>` size
		);
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`read<doxid-function_io_websocket_read_2>`(
			void* p,
			:ref:`size_t<doxid-typedef_size_t>` size
		);
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`write<doxid-function_io_websocket_write>`(
			:ref:`io.WebSocketFrameOpcode<doxid-type_io_websocketframeopcode>` opcode,
			void const* p,
			:ref:`size_t<doxid-typedef_size_t>` size
		);
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`writeText<doxid-function_io_websocket_writetext>`(:ref:`string_t<doxid-typedef_string_t>` text);
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`writeBinary<doxid-function_io_websocket_writebinary>`(
			void const* p,
			:ref:`size_t<doxid-typedef_size_t>` size
		);
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`writePing<doxid-function_io_websocket_writeping>`(
			void const* p,
			:ref:`size_t<doxid-typedef_size_t>` size
		);
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`writePing<doxid-function_io_websocket_writeping_2>`();
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`writePong<doxid-function_io_websocket_writepong>`(
			void const* p,
			:ref:`size_t<doxid-typedef_size_t>` size
		);
	
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`writePong<doxid-function_io_websocket_writepong_2>`();
		:ref:`size_t<doxid-typedef_size_t>` errorcode :target:`writeClose<doxid-function_io_websocket_writeclose>`();
	
		long errorcode :target:`wait<doxid-function_io_websocket_wait>`(
			:ref:`io.WebSocketEvents<doxid-type_io_websocketevents>` eventMask,
			void function* handler(io.WebSocketEvents triggeredEvents)
		);
	
		bool errorcode :target:`cancelWait<doxid-function_io_websocket_cancelwait>`(long handle);
	
		:ref:`io.WebSocketEvents<doxid-type_io_websocketevents>` :target:`blockingWait<doxid-function_io_websocket_blockingwait>`(
			:ref:`io.WebSocketEvents<doxid-type_io_websocketevents>` eventMask,
			:ref:`uint_t<doxid-typedef_uint_t>` timeout = -1
		);
	
		:ref:`io.WebSocketEvents<doxid-type_io_websocketevents>` async :target:`asyncWait<doxid-function_io_websocket_asyncwait>`(:ref:`io.WebSocketEvents<doxid-type_io_websocketevents>` eventMask);

		// aliases
	
		alias :target:`dispose<doxid-alias_io_websocket_dispose>` = close;
	};
