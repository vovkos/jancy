.. include:: def.rst
.. index:: pair: group; Device Monitoring
.. _doxid-group_io_devmon:

Device Monitoring
=================

.. toctree::
	:hidden:

	enum_io_win_DeviceMonitorKeyboardEventFlag.rst
	enum_io_DeviceMonitorMiMsgCode.rst
	enum_io_DeviceMonitorMiStartFlags.rst
	enum_io_win_DeviceMonitorMouseEventFlag.rst
	enum_io_win_DeviceMonitorNotifyCode.rst
	enum_io_lnx_DeviceMonitorNotifyCode.rst
	enum_io_DeviceMonitorNotifyFlags.rst
	struct_io_win_DeviceMonitorCloseNotifyParams.rst
	struct_io_lnx_DeviceMonitorCloseNotifyParams.rst
	struct_io_win_DeviceMonitorCreateMailslotNotifyParams.rst
	struct_io_win_DeviceMonitorCreateNamedPipeNotifyParams.rst
	struct_io_win_DeviceMonitorCreateNotifyParams.rst
	struct_io_lnx_DeviceMonitorIoctlNotifyParams.rst
	struct_io_win_DeviceMonitorIoctlNotifyParams.rst
	struct_io_win_DeviceMonitorKeyboardEventParams.rst
	struct_io_win_DeviceMonitorKeyboardInput.rst
	struct_io_DeviceMonitorMiMsgHdr.rst
	struct_io_DeviceMonitorMiStartParams.rst
	struct_io_win_DeviceMonitorMouseEventParams.rst
	struct_io_win_DeviceMonitorMouseInput.rst
	struct_io_DeviceMonitorNotifyHdr.rst
	struct_io_lnx_DeviceMonitorOpenNotifyParams.rst
	struct_io_lnx_DeviceMonitorReadWriteNotifyParams.rst
	struct_io_win_DeviceMonitorReadWriteNotifyParams.rst
	class_io_DeviceMonitor.rst

This section describes types and facilities used for hook-based device monitoring (via *Tibbo Device Monitor*).


.. ref-code-block:: jancy
	:class: doxyrest-overview-code-block

	import "io_devmon.jncx"
	
	// typedefs

	typedef :ref:`io.ReadOnlyStreamEvents<doxid-type_io_readonlystreamevents>` :target:`io.DeviceMonitorEvents<doxid-typedef_io_devicemonitorevents>`;

	// enums

	enum :ref:`io.win.DeviceMonitorKeyboardEventFlag<doxid-type_io_win_devicemonitorkeyboardeventflag>`;
	enum :ref:`io.DeviceMonitorMiMsgCode<doxid-type_io_devicemonitormimsgcode>`;
	bitflag enum :ref:`io.DeviceMonitorMiStartFlags<doxid-type_io_devicemonitormistartflags>`;
	enum :ref:`io.win.DeviceMonitorMouseEventFlag<doxid-type_io_win_devicemonitormouseeventflag>`;
	enum :ref:`io.win.DeviceMonitorNotifyCode<doxid-type_io_win_devicemonitornotifycode>`;
	enum :ref:`io.lnx.DeviceMonitorNotifyCode<doxid-type_io_lnx_devicemonitornotifycode>`;
	bitflag enum :ref:`io.DeviceMonitorNotifyFlags<doxid-type_io_devicemonitornotifyflags>`;

	// structs

	struct :ref:`io.win.DeviceMonitorCloseNotifyParams<doxid-type_io_win_devicemonitorclosenotifyparams>`;
	struct :ref:`io.lnx.DeviceMonitorCloseNotifyParams<doxid-type_io_lnx_devicemonitorclosenotifyparams>`;
	struct :ref:`io.win.DeviceMonitorCreateMailslotNotifyParams<doxid-type_io_win_devicemonitorcreatemailslotnotifyparams>`;
	struct :ref:`io.win.DeviceMonitorCreateNamedPipeNotifyParams<doxid-type_io_win_devicemonitorcreatenamedpipenotifyparams>`;
	struct :ref:`io.win.DeviceMonitorCreateNotifyParams<doxid-type_io_win_devicemonitorcreatenotifyparams>`;
	struct :ref:`io.lnx.DeviceMonitorIoctlNotifyParams<doxid-type_io_lnx_devicemonitorioctlnotifyparams>`;
	struct :ref:`io.win.DeviceMonitorIoctlNotifyParams<doxid-type_io_win_devicemonitorioctlnotifyparams>`;
	struct :ref:`io.win.DeviceMonitorKeyboardEventParams<doxid-type_io_win_devicemonitorkeyboardeventparams>`;
	struct :ref:`io.win.DeviceMonitorKeyboardInput<doxid-type_io_win_devicemonitorkeyboardinput>`;
	struct :ref:`io.DeviceMonitorMiMsgHdr<doxid-type_io_devicemonitormimsghdr>`;
	struct :ref:`io.DeviceMonitorMiStartParams<doxid-type_io_devicemonitormistartparams>`;
	struct :ref:`io.win.DeviceMonitorMouseEventParams<doxid-type_io_win_devicemonitormouseeventparams>`;
	struct :ref:`io.win.DeviceMonitorMouseInput<doxid-type_io_win_devicemonitormouseinput>`;
	struct :ref:`io.DeviceMonitorNotifyHdr<doxid-type_io_devicemonitornotifyhdr>`;
	struct :ref:`io.lnx.DeviceMonitorOpenNotifyParams<doxid-type_io_lnx_devicemonitoropennotifyparams>`;
	struct :ref:`io.lnx.DeviceMonitorReadWriteNotifyParams<doxid-type_io_lnx_devicemonitorreadwritenotifyparams>`;
	struct :ref:`io.win.DeviceMonitorReadWriteNotifyParams<doxid-type_io_win_devicemonitorreadwritenotifyparams>`;

	// classes

	class :ref:`io.DeviceMonitor<doxid-type_io_devicemonitor>`;

	// global functions

	bool :target:`io.detectDeviceMonitor<doxid-function_io_detectdevicemonitor>`();

