// this test was used to fix a bug with bigendian enums

enum EthernetType: bigendian uint16_t {
	Ip  = 0x0800,
	Arp = 0x0806,
	Ip6 = 0x86dd,
}

struct EthernetHdr {
	uint8_t m_dstAddress[6];
	uint8_t m_srcAddress[6];
	EthernetType m_type;
}

int main() {
	char buf[] = "123456123456" 0x"08 06";

	EthernetHdr const* hdr = (EthernetHdr const*) buf;

	uint_t a = hdr.m_type;
	EthernetType b = hdr.m_type;
	uint_t c = (bigendian uint16_t)0x0806;
	uint_t d = EthernetType.Arp;
	bigendian uint_t e = 0x0806;
	bigendian uint_t f = (bigendian uint_t)0x0806;
	EthernetType g = EthernetType.Arp;
	EthernetType h = (EthernetType)0x0806;

	printf("*** all should print 0x0806\n");
	printf("hdr.m_type = %04x\n", hdr.m_type);
	printf("a = %04x\n", a);
	printf("b = %04x\n", b);
	printf("c = %04x\n", c);
	printf("d = %04x\n", d);
	printf("e = %04x\n", e);
	printf("f = %04x\n", f);
	printf("g = %04x\n", g);
	printf("h = %04x\n", h);

	if (hdr.m_type == 0x0806) {
		printf("ARP\n");
	} else {
		printf("NOT ARP\n");
		assert(false);
	}

	if (hdr.m_type == EthernetType.Arp) {
		printf("ARP\n");
	} else {
		printf("NOT ARP\n");
		assert(false);
	}

	return 0;
}
