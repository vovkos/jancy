// async errorcode/exception testing

bool errorcode async asyncOpen(int x) {
	printf("asyncOpen(%d)\n", x);
	return true;
}

int errorcode async asyncFoo(int x) {
	printf("asyncFoo(%d)\n", x);

	printf("  opening...\n");
	await asyncOpen(x);

	printf("  done!\n");
	return 0;

catch:
	printf("asyncFoo - exception!\n");
	return -1;
}

int main() {
	jnc.Promise* promise = asyncFoo(10);
	int result = promise.blockingWait();
	printf("result: %d\n", result);
	return result;

catch:
	printf("main - exception\n");
	return -1;
}
