int main() {
	printf("compiling\n");

	jnc.Regex regex;
	regex.createSwitch();
	regex.compileSwitchCase(r"\x02[^\r]+\r");
	regex.compileSwitchCase(r"[a-z]+");
	regex.compileSwitchCase(r"[0-9]+");
	regex.compileSwitchCase(r".");
	regex.finalizeSwitch();

	printf("matching\n");

	char const* text = "\x02ab123cdef45678\xff";

	jnc.RegexExecResult result;
	jnc.RegexState state(jnc.RegexExecFlags.AnchorDataBegin | jnc.RegexExecFlags.Stream);

	result = regex.exec(state, text);
	printf("regex result: %d\n", result);

	result = regex.eof(state);
	printf("regex result: %d, match offset: %d, match length: %d, match: %s\n", result, state.m_match.m_offset, state.m_match.m_length, state.m_match.m_text);

	for (size_t i = 0; i < 5; i++) {
		result = regex.exec(state, text + state.m_match.m_endOffset);
		printf("regex result: %d, match offset: %d, match length: %d, match: %s\n", result, state.m_match.m_offset, state.m_match.m_length, state.m_match.m_text);
	}

	return 0;

catch:
	printf($"error: $!\n");
	return -1;
}
