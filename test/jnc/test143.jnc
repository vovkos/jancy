import "io_usbmon.jncx"
import "io_UsbMonEnumerator.jnc"

int main() {
	io.UsbMonDeviceDesc const* list = io.enumerateUsbMonDevices(io.UsbMonDeviceDescMask.All);
	io.UsbMonDeviceDesc const* p = list;
	io.UsbMonDeviceDesc const* serialTap;
	
	for (size_t i = 0; p; p = p.m_next, i++) {
		printf("device #%d\n", i);
		printf("  capture:        %s\n", p.m_captureDeviceName);
		printf("  address:        %d\n", p.m_address);

		if (!(p.m_flags & io.UsbMonDeviceDescFlag.DeviceDescriptor)) {
			printf("  [ error fetching device descriptor ]\n");
			continue;
		}

		printf("  VID:            %04x\n", p.m_vendorId);
		printf("  PID:            %04x\n", p.m_productId);
		printf("  class:          %d\n", p.m_class);
		printf("  subclass:       %d\n", p.m_subClass);
		printf("  speed:          %d\n", p.m_speed);

		if (p.m_description)
			printf("  description:    %s\n", p.m_description);

		if (p.m_manufacturer)
			printf("  manufacturer:   %s\n", p.m_manufacturer);

		if (p.m_driver)
			printf("  driver:         %s\n", p.m_driver);

		if (p.m_manufacturerDescriptor)
			printf("  manufacturer*:  %s\n", p.m_manufacturerDescriptor);

		if (p.m_productDescriptor)
			printf("  product*:       %s\n", p.m_productDescriptor);

		if (p.m_serialNumberDescriptor)
			printf("  serial number*: %s\n", p.m_serialNumberDescriptor);

		if (p.m_vendorId == VidSerialTap && p.m_productId == PidSerialTap)
			serialTap = p;

		printf("\n");
	}

	return 0;
}
