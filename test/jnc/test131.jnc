// this test was used during development of sys.RegKey class

import "sys_Registry.jnc"

int main() {
	static char const* installerKey = r"SOFTWARE\Microsoft\Windows\CurrentVersion\Installer";
	static char const* policiesKey = r"SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System";

	static char const* installerValueNames[] = {
		"InstallerLocation",
		"MsiExecCA32",
		"MsiExecCA64",
	}

	static char const* policiesValueNames[] = {
		"ConsentPromptBehaviorAdmin",
		"ConsentPromptBehaviorUser",
		"EnableLUA",
		"EnableVirtualization",
		"ValidateAdminCodeSignatures",
	}

	sys.RegKey key;
	key.open(sys.RegStdKey.LocalMachine, installerKey, sys.RegKeyAccess.Read);

	for (size_t i = 0; i < countof(installerValueNames); i++) {
		char const* name = installerValueNames[i];
		char const* string = key.readString(name);
		printf("%s: %s\n", name, string);
	}

	key.open(sys.RegStdKey.LocalMachine, policiesKey, sys.RegKeyAccess.Read);

	for (size_t i = 0; i < countof(policiesValueNames); i++) {
		char const* name = policiesValueNames[i];
		uint32_t dword = key.readDword(name);
		char const* string = key.readString(name);
		printf("%s: dword: %d, string: %s\n", name, dword, string);
	}

	return 0;

catch:
	print($"error: $!\n");
	return -1;
}
