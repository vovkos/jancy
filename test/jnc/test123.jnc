// async schedulers testing

class MyScheduler: jnc.Scheduler {
	construct() {
		printf("MyScheduler.construct(%p)\n", this);
	}

	override schedule(function* f()) {
		printf("+MyScheduler.schedule(%p)\n", this);
		f();
		printf("-MyScheduler.schedule(%p)\n", this);
	}
}

int async asyncOpen(int x) {
	printf("asyncOpen(%d)\n", x);
	return x * 2;
}

int async asyncFoo(int x) {
	printf("asyncFoo(%d)\n", x);

	printf("  opening...\n");
	x = await asyncOpen(x);

	printf("  done!\n");
	return x * 3;
}

int main() {
	MyScheduler scheduler;
	jnc.Promise* promise = (asyncFoo @ scheduler)(10);
	int result = promise.blockingWait();
	printf("result: %d\n", result);
	assert(result == 60);

	return 0;
}
