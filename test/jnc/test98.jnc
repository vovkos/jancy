size_t getSzSize1(char const* s) {
	printf("getSzSize1 (%s)\n", s);
	return strlen(s) + 1;
}

size_t getSzSize2(char const* s) {
	printf("getSzSize2 (%s)\n", s);
	return strlen(s) + 1;
}

dynamic struct Hdr {
	char m_a;
	char m_s1[getSzSize1(m_s1)];
	char m_b;
}

dynamic struct S {
	Hdr m_hdr;
	char m_c;
	char m_s2[getSzSize2(m_s2)];
	char m_d;
	char m_e;
}

void printS(S const* s) {
	printf("s.m_hdr.m_a = %d\n", s.m_hdr.m_a);
	printf("s.m_hdr.m_b = %d\n", s.m_hdr.m_b);
	printf("s.m_c = %d\n", s.m_c);
	printf("s.m_d = %d\n", s.m_d);
	printf("s.m_e = %d\n", s.m_e);
	printf("sizeof (*s)            = %d\n", dynamic sizeof (*s));
	printf("sizeof (s.m_hdr)       = %d\n", dynamic sizeof (s.m_hdr));
	printf("sizeof (s.m_hdr.m_s1)  = %d\n", dynamic sizeof (s.m_hdr.m_s1));
	printf("countof (s.m_hdr.m_s1) = %d\n", dynamic countof (s.m_hdr.m_s1));
	printf("sizeof (s.m_s2)        = %d\n", dynamic sizeof (s.m_s2));
	printf("countof (s.m_s2)       = %d\n", dynamic countof (s.m_s2));
}

int main() {
	char buffer[] = {
		4, 'a', 'b', 'c', 0, 10, 20, 'd', 'e', 'f', 'g', 0, 30, 40,
		5, 'A', 'B', 0, 11, 21, 'D', 'E', 'F', 'G', 'H', 0, 31, 41,
	}

	S* s = (S*)buffer;
	S* s2 = s;

	printS(s);

	printf("s     = %p\n", s);
	s++;

	printf("s + 1 = %p\n", s);
	printS(s);

	return 0;
}
