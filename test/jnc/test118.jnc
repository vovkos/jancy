void scanStream(
	jnc.RegexState* state,
	char const* p
) {
	char const* end = p + strlen(p);
	while (p < end) {
		reswitch (state, p, end - p) {
		case "[0-9]+":
			printf(
				"match#1: match.m_offset: %d match.m_length: %d match.m_text: %s\n",
				state.m_match.m_offset,
				state.m_match.m_length,
				state.m_match.m_text
			);

			break;

		case ".":
			printf(
				"match#2: match.m_offset: %d match.m_length: %d\n",
				state.m_match.m_offset,
				state.m_match.m_length
			);

			// ignore the rest
			break;

		default:
			if (!state.m_lastExecResult)
				printf("mismatch\n");

			assert(state.m_lastExecResult == jnc.RegexExecResult.Continue);
			printf("incomplete match\n");
			break2;
		}

		p += state.m_match.m_length;
	}
}


int main() {
	jnc.RegexState state(jnc.RegexExecFlags.AnchorDataBegin | jnc.RegexExecFlags.Stream);

	scanStream(state, "abc123def456");

	return 0;
}
