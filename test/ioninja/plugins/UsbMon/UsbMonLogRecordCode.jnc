//..............................................................................
//
// USB Monitor log record declarations
//

import "log_RecordCode.jnc"

//..............................................................................

enum UsbMonLogRecordCode: uint64_t {
	CaptureStarted        = 0x01d8fa56e6368500 | log.RecordCodeFlags.Foldable,
	CaptureStopped        = 0x01d8fa56e6368501,
	CaptureError          = 0x01d8fa56e6368502,
	ControlTransfer       = 0x01d8fa56e6368503 | log.RecordCodeFlags.Foldable,
	BulkInterruptTransfer = 0x01d8fa56e6368504,
	IsochronousTransfer   = 0x01d8fa56e6368505,
}

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct CaptureStartedParams {
	uint16_t m_vendorId;
	uint16_t m_productId;
	uint8_t m_osKind;
	uint8_t m_captureDeviceId;
	uint8_t m_address;
	uint8_t m_speed;

	// followed by null-terminated strings:
	// - description
	// - manufacturer
	// - driver
}

struct BulkInterruptTransferParams {
	uint8_t m_endpoint;
	io.UsbMonTransferType m_type;
}

struct IsochronousTransferParams {
	uint8_t m_endpoint;
	io.UsbMonIsochronousHdr m_isochronousHdr;
}

//..............................................................................
